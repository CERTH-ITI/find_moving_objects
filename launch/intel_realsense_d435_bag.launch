<?xml version="1.0" encoding="utf-8"?>
<launch>
  
  <!-- uncomment the following two lines to set logger level to DEBUG for find_moving_objects -->
<!--   <env name="ROSCONSOLE_CONFIG_FILE" -->
<!--        value="$(find find_moving_objects)/logger_config/logger_config_debug.config" /> -->

  
  
  <!-- Command line arguments:
       Anything you specify on the command line has precedence over the values specified in this file -->
  
  <arg name="rosbag_extra_args"
       default=""
       doc="Additional args for rosbag play"
       />
  
  <arg name="rosbag_required"
       default="false"
       doc="Set this to true if rosbag is a required node"
       />
  
  <arg name="bag_path"
       default="$(find find_moving_objects)/bags"
       doc="Base path to log/bag files"
       />
  
  <!-- NOTE THAT THE FOLLOWING FILE IS COMPRESSED AND MUST BE EXTRACTED -->
  <arg name="bag" 
       default="object_is_moving_in_a_convex_arc.bag" 
       doc="bag file to play"
       />
  
  <arg name="pointcloud2_interpreter_extra_args"
       default=""
       doc="Additional args for the pointcloud2 interpreter"
       />
  
  <arg name="frame_broadcaster_extra_args"
       default=""
       doc="Additional args for the frame broadcaster"
       />
  
  
  
  <!-- Frames broadcaster - avoid tf transformation errors by publishing the relation between the involved frames
                    UPDATE THIS ACCORDING TO YOUR OWN NEEDS --> 
  <node pkg="find_moving_objects"
        type="example_frame_broadcaster_node"
        name="frame_broadcaster" 
        args="--print_all_options
              $(arg frame_broadcaster_extra_args)"
        output="screen"
        />
  
  <!-- pointcloud2 echor - avoid dropping too old messages by updating their timestamps -->
  <node pkg="find_moving_objects"
        type="example_d435_voxel_echoer_node"
        name="d435_voxel_echoer"
        />
  
  <!-- Run pointcloud2 interpreter for voxel-filtered camera -->
  <node pkg="find_moving_objects"
        type="pointcloud2_interpreter_node"
        name="pointcloud2_interpreter"
        args="--print_all_options
              --subscribe_topic /camera/depth/color/points/filtered_echoed
              --sensor_frame_has_z_axis_forward
              --base_frame base_link
              --fixed_frame odom
              --map_frame map
              --subscribe_buffer_size 1
              --publish_ema
              --ema_alpha 1.0
              --publish_objects_closest_point_markers
              --publish_objects_velocity_arrows
              --publish_objects_width_lines
              --velocity_arrows_use_sensor_frame
              --optimize_nr_scans_in_bank 0.5
              --nr_points_per_scan_in_bank 360
              --voxel_leaf_size 0.01
              --threshold_z_min 0
              --threshold_z_max 1
              --object_threshold_min_speed 0.03
              --object_threshold_max_distance 6.5
              --object_threshold_min_nr_points 4
              --object_threshold_min_confidence 0.5
              --object_threshold_edge_max_delta_range 0.15
              --object_threshold_max_delta_width_in_points 50
              --object_threshold_bank_tracking_max_delta_distance 0.4
              $(arg pointcloud2_interpreter_extra_args)"
        output="screen"
        />
  
  <!-- Run rviz for visualization -->
  <node pkg="rviz" 
        type="rviz" 
        name="rviz" 
        args="--display-config $(find find_moving_objects)/rviz/moving_objects_bag.rviz"
        required="true"
        />

  <!-- Run rosbag to play back the recording -->
  <node pkg="rosbag"
        type="play"
        name="rosbag_play"
        args="--wait-for-subscribers
              --topics /camera/depth/color/points/filtered /tf_static
              $(arg rosbag_extra_args)
              --bags $(arg bag_path)/$(arg bag)"
        required="$(arg rosbag_required)"
        />

</launch>
